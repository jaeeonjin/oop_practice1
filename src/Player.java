import java.util.List;

/**
 * Created by JaeeonJin on 2017-09-26.
 * 인터페이스 VS 추상클래스
 * - 공통점
 * : 상속받는 클래스 혹은 구현하는 인터페이스 안에 있는 추상 메소드를 구현하도록 강제한다.
 * - 차이점 : 목적이 다르다
 *  # 인터페이스
 *   : 인터페이스는 함수의 껍데기만 있는데, 그 이유는 그 함수의 구현을 강제하기 위해서다.
 *   : 다중 상속 가능
 *  # 추상클래스
 *   : 추상 클래스를 상속 받아서 기능을 이용하고, 확장시킨다.
 *   : 다중 상속 불가능
 *
 *   !! 하지만 결코 다중 상속을 이용하기 위해 인터페이스를 이용하는 것은 아니다 !!
 *
 *   상속은 슈퍼 클래스의 기능을 이용하거나 확장하기 위해서 사용되된다
 *   인터페이스는 해당 인터페이스를 구현한 객체들에 대해서 동일한 동작을 약속하기 위해 존재한다.
 *
 *   # 그러므로 Gamer와 Dealer는 동일한 동작을 구현해야하므로 인터페이스를 사용해야한다. !!!!!!!!!!!!!!!!! 꺄오
 *   # 어? 그런데 인터페이스로 구현한 메소드가 모두 같잖아? 그러면 추상 클래스를 사용해야 되는 거 아니야?
 *   # 라고 생각했지만, 이 부분에 관해 다음과 같이 설명하고 있다.
 *   ## Gamer와 Dealer는 시간이 지나서도 같은 기능을 가지지 않을 수도 있다.
 *   ## 따라서 서로 다른 객체는 최대한 느슨한 관계를 가지는 것이 좋다
 *   ## 그러므로 추상 클래스와 상속은 최대한 피하는 것이 좋다.
 */
public interface Player {
    void receiveCard(Card card);
    void showCards();
    List<Card> openCards();
    void turnOn();
    void turnOff();
    boolean isTurn();
    String getName();
}